/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Untitled.glb 
*/

import { React, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'
const Model = (props) => {
  const { nodes, materials } = useGLTF('/FinalTest.glb')
  const rotorRef = useRef()
  const blade1Ref = useRef()
  const blade2Ref = useRef()
  const blade3Ref = useRef()
  const pitchRef = useRef()
  useFrame((state, delta) => {
    if (rotorRef.current) {
      rotorRef.current.rotation.z -= delta * 2 // Adjust speed as needed
    }

    // const localAxis2 = new THREE.Vector3(1, 0, 0)
    // const localAxis3 = new THREE.Vector3(0, 0, 1)
    const localBladeAxis = new THREE.Vector3(0, -1, 0)
    const pitchAngle = 0
    // const pitchAngle = Math.sin(Date.now() * 0.001) * 0.1
    // blade1Ref.current.setRotationFromAxisAngle(axis, angle)
    if (blade1Ref.current) blade1Ref.current.rotation.y = pitchAngle
    if (blade2Ref.current) blade2Ref.current.rotation.y = pitchAngle
      if (blade3Ref.current) blade3Ref.current.rotation.y = pitchAngle

    // blade1Ref.current.setRotationFromAxisAngle(localBladeAxis, pitchAngle)
    // blade2Ref.current.setRotationFromAxisAngle(localBladeAxis, pitchAngle)
    // blade3Ref.current.setRotationFromAxisAngle(localBladeAxis, pitchAngle)
  })

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Turbine.geometry} material={nodes.Turbine.material} position={[0.023, 20.136, -0.264]} scale={[0.619, 0.619, 1.029]}>
        <mesh ref={rotorRef} geometry={nodes.Rotor.geometry} material={nodes.Rotor.material} position={[0, 0.067, 1.395]} scale={[1.616, 1.616, 0.972]}>
          {/* <mesh ref={blade1Ref} geometry={nodes.Blade_1.geometry} material={nodes.Blade_1.material} position={[-0.009, 0.009, 0.005]} rotation={[0, 0, -2.095]} scale={[1, 1, 0.972]} />
          <mesh ref={blade2Ref} geometry={nodes.Blade_2.geometry} material={nodes.Blade_2.material} position={[0.013, 0.003, 0.005]} rotation={[0, 0, 2.095]} scale={[1, 1, 0.972]} />
          <mesh ref={blade3Ref} geometry={nodes.Blade_3.geometry} material={nodes.Blade_3.material} position={[-0.004, -0.013, 0.005]} scale={[1, 1, 0.972]} /> */}
          {/* Blade 1 */}
        <group rotation={[0, 0, (2*Math.PI * 2) / 3]}>
        <mesh
          ref={blade1Ref}
          geometry={nodes.Blade_3.geometry}
          material={nodes.Blade_3.material}
          position={[-0.004, -0.013, 0.005]}
          scale={[1, 1, 0.972]}
        />
          </group>
          {/* <axesHelper args={[10]} /> */}
        {/* </mesh> */}
        {/* <axesHelper args={[10]} /> */}


      {/* Blade 2 */}
      <group>
        <mesh
          ref={blade2Ref}
          geometry={nodes.Blade_3.geometry}
          material={nodes.Blade_3.material}
          position={[-0.004, -0.013, 0.005]}
          scale={[1, 1, 0.972]}
        />
      </group>

      {/* Blade 3 */}
      <group rotation={[0, 0, (Math.PI * 2) / 3]} >
        <mesh
          ref={blade3Ref}
          geometry={nodes.Blade_3.geometry}
          material={nodes.Blade_3.material}
          position={[-0.004, -0.013, 0.005]}
          scale={[1, 1, 0.972]}
        />
      </group>

        </mesh>
      </mesh>
    </group>


  )
}

// useGLTF.preload('/WindTest2.glb')

export default Model;